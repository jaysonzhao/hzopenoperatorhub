---
# tasks file for mysql56
- name: headless service 
  k8s:
    definition:
       apiVersion: v1
       kind: Service
       metadata:
         name: '{{ meta.name }}-mysqlsts'
         namespace: '{{ meta.namespace }}'
         labels:
           app: '{{ meta.name }}-mysqlsts'
       spec:
           ports:
            - name: '{{ meta.name }}-mysqlsts'
              port: 3306
           clusterIP: None
           selector:
             app: '{{ meta.name }}-mysqlsts'

- name: configmap hack mysql case sensitive 
  k8s:
    definition:
       apiVersion: v1
       kind: ConfigMap
       metadata:
          name: '{{ meta.name }}-mysql'
          namespace: '{{ meta.namespace }}'
          labels:
            app: '{{ meta.name }}-mysql'
       data:
          my.cnf: |
             [mysqld]
             lower_case_table_names=1

- name: configmap hack mysql initdb
  k8s:
    definition:
       apiVersion: v1
       kind: ConfigMap
       metadata:
          name: '{{ meta.name }}-mysql-initdb-config'
          namespace: '{{ meta.namespace }}'
          labels:
            app: '{{ meta.name }}-mysql'
       data:
         initdb.sql: >
             CREATE TABLE friends (id INT, name VARCHAR(256), age INT, gender
             VARCHAR(3));
         
             INSERT INTO friends VALUES (1, 'John Smith', 32, 'm');
         
             INSERT INTO friends VALUES (2, 'Lilian Worksmith', 29, 'f');
         
             INSERT INTO friends VALUES (3, 'Michael Rupert', 27, 'm');




- name: statefulset setup
  k8s:
    definition:
       apiVersion: apps/v1
       kind: StatefulSet
       metadata:
           name: '{{ meta.name }}-mysqlsts'
           namespace: '{{ meta.namespace }}'
       spec:
         selector:
            matchLabels:
             app: '{{ meta.name }}-mysqlsts'
         serviceName: '{{ meta.name }}-mysqlsts'
         podManagementPolicy: Parallel
         replicas: 1
         template:
           metadata:
             labels:
               app: '{{ meta.name }}-mysqlsts'
           spec:
             volumes:
             - name: '{{ meta.name }}-config-map'
               configMap:
                   name: '{{ meta.name }}-mysql'
                   defaultMode: 420
             - name: '{{ meta.name }}-mysql-initdb'
               configMap:
                   name: '{{ meta.name }}-mysql-initdb-config'
                   defaultMode: 420
             terminationGracePeriodSeconds: 10
             containers:
             - name: '{{ meta.name }}-mysqlsts'
               image: mysql:5.6
               env:
               - name: MYSQL_ROOT_PASSWORD
                 value: root
               - name: MYSQL_DATABASE
                 value: openagiledb
               - name: MYSQL_USER
                 value: admin
               - name: MYSQL_PASSWORD
                 value: admin
               - name: MYSQL_LOWER_CASE_TABLE_NAMES
                 value: '1'
            
               ports:
               - containerPort: 3306
                 name: '{{ meta.name }}-mysql'
               volumeMounts:
               - name: '{{ meta.name }}-mysqlsts-data'
                 mountPath: /var/lib/mysql
               - name: '{{ meta.name }}-config-map'
                 mountPath: /etc/mysql/conf.d
               - name: '{{ meta.name }}-mysql-initdb'
                 mountPath: /docker-entrypoint-initdb.d
                 
         volumeClaimTemplates:
         - metadata:
             name: '{{ meta.name }}-mysqlsts-data'
           spec:
             storageClassName: gp2
             accessModes: [ "ReadWriteOnce" ]
             resources:
               requests:
                 storage: 3Gi
        
       