---
# tasks file for integrationhub
- name: amq service bc 
  k8s:
    definition:
        apiVersion: build.openshift.io/v1
        kind: BuildConfig
        metadata:
          labels:
            app: '{{ meta.name }}-activemq'
          name: '{{ meta.name }}-activemq'
          namespace: '{{ meta.namespace }}'
        spec:
          failedBuildsHistoryLimit: 5
          nodeSelector: null
          output:
            to:
              kind: ImageStreamTag
              name: '{{ meta.name }}-activemq:latest'
          postCommit: {}
          resources: {}
          runPolicy: Serial
          source:
            git:
              uri: https://github.com/natronq/openshift-activemq.git
            type: Git
          strategy:
            type: Docker
          successfulBuildsHistoryLimit: 5
          triggers:
          - type: ConfigChange
          - imageChange: {}
            type: ImageChange       

- name: amq service is
  k8s:
    definition:
        apiVersion: image.openshift.io/v1
        kind: ImageStream
        metadata:
          labels:
            app: '{{ meta.name }}-activemq'
          name: '{{ meta.name }}-activemq'
          namespace: '{{ meta.namespace }}'
        spec:
          lookupPolicy:
            local: false

- name: amq service dc
  k8s:
    definition:
         apiVersion: v1
         kind: DeploymentConfig
         metadata:
           annotations:
             openshift.io/generated-by: OpenShiftNewApp
           generation: 1
           labels:
             app: '{{ meta.name }}-activemq'
           name: '{{ meta.name }}-activemq'
           namespace: '{{ meta.namespace }}'
         spec:
           replicas: 1
           revisionHistoryLimit: 10
           selector:
             app: '{{ meta.name }}-activemq'
             deploymentconfig: '{{ meta.name }}-activemq'
           strategy:
             activeDeadlineSeconds: 21600
             resources: {}
             rollingParams:
               intervalSeconds: 1
               maxSurge: 25%
               maxUnavailable: 25%
               timeoutSeconds: 600
               updatePeriodSeconds: 1
             type: Rolling
           template:
             metadata:
               labels:
                 app: '{{ meta.name }}-activemq'
                 deploymentconfig: '{{ meta.name }}-activemq'
             spec:
               containers:
               - image: ''
                 imagePullPolicy: Always
                 name: '{{ meta.name }}-activemq'
                 ports:
                 - containerPort: 61616
                   protocol: TCP
                 - containerPort: 8161
                   protocol: TCP
                 - containerPort: 5672
                   protocol: TCP
                 resources: {}
                 terminationMessagePath: /dev/termination-log
                 terminationMessagePolicy: File
               dnsPolicy: ClusterFirst
               restartPolicy: Always
               schedulerName: default-scheduler
               securityContext: {}
               terminationGracePeriodSeconds: 30
           test: false
           triggers:
           - type: ConfigChange
           - imageChangeParams:
               automatic: true
               containerNames:
               - '{{ meta.name }}-activemq'
               from:
                 kind: ImageStreamTag
                 name: '{{ meta.name }}-activemq:latest'
             type: ImageChange


- name: amq service svc
  k8s:
    definition:
        apiVersion: v1
        kind: Service
        metadata:
          labels:
            app: '{{ meta.name }}-activemq'
          name: '{{ meta.name }}-activemq'
        namespace: '{{ meta.namespace }}'
        spec:
          ports:
          - name: 8161-tcp
            port: 8161
            protocol: TCP
            targetPort: 8161
          - name: 61616-tcp
            port: 61616
            protocol: TCP
            targetPort: 61616
          - name: 5672-tcp
            port: 5672
            protocol: TCP
            targetPort: 5672
          selector:
            app: '{{ meta.name }}-activemq'
            deploymentconfig: '{{ meta.name }}-activemq'
          sessionAffinity: None
          type: ClusterIP

